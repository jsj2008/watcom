/*
 *  sys/wait.h  POSIX Standard: 3.2.1 Wait for Process Termination
 *
:include crwat.sp
 */
#ifndef _SYS_WAIT_H_INCLUDED
#define _SYS_WAIT_H_INCLUDED

:include readonly.sp

:include owrtlink.sp

#ifndef _SIGNAL_H_INCLUDED
 #include <signal.h>
#endif

:include cpluspro.sp

:include lnxkpack.sp

:include pid_t.sp
:include id_t.sp

typedef enum {
    P_ALL,          /* Wait for any child. */
    P_PID,          /* Wait for specified process. */
    P_PGID          /* Wait for members of process group. */
} idtype_t;

/* Bits in the third argument to `waitpid'.  */
#define WNOHANG         1           /* Don't block waiting.  */
#define WUNTRACED       2           /* Report status of stopped children.  */

#define __WALL          0x40000000 /* Wait for any child.  */
#define __WCLONE        0x80000000 /* Wait for cloned process.  */

#define WEXITSTATUS(status)     (((status) & 0xff00) >> 8)
#define WTERMSIG(status)        ((status) & 0x7f)
#define WSTOPSIG(status)        (((status) & 0xff00) >> 8)
#define WIFEXITED(status)       (((status) & 0x7f) == 0)
#define WIFSIGNALED(status)     (((status) & 0xff) != 0x7f && ((status) & 0x7f) != 0)
#define WIFSTOPPED(status)      (((status) & 0xff) == 0x7f)

_WCRTLINK extern pid_t  wait( int *__stat_loc );
_WCRTLINK extern pid_t  waitpid( pid_t __pid, int *__stat_loc, int __options );

:include poppack.sp

:include cplusepi.sp

#endif /* !_SYS_WAIT_H_INCLUDED */
