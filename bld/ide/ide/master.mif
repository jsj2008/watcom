proj_name = ide

sys_windowed = 1

!ifndef ide_autodepends
ide_autodepends = .autodepend
!endif

doc_path_nt     = $(docs_dir)/nt
doc_path_os2    = $(docs_dir)/os2
doc_path_win    = $(docs_dir)/win

ide_h_os2   = $(doc_path_os2)/ide.h
ide_h_win   = $(doc_path_win)/ide.h
ide_h_nt    = $(doc_path_nt)/ide.h

additional_cleanup = $(ide_h_os2) $(ide_h_win) $(ide_h_nt)

.SUFFIXES : .rc

!ifdef __UNIX__
to_os_path=\=/
!else
to_os_path=/=\
!endif

!include cproj.mif
!include defrule.mif
!include deftarg.mif

!include $(idelib_dir)/client.mif
!include $(wclass_dir)/client.mif
!include $(gui_dir)/client.mif

WINDOWS = 1
!include wres.mif

!include ../objects.mif

description = 'Open Watcom IDE'

c_path_os2 = $(batch_dir)/os2
c_path_nt  = $(batch_dir)/nt
c_path_win = $(batch_dir)/dos;$(batch_dir)/os2

rc_path_os2 = ../res/os2
rc_path_nt  = ../res/win
rc_path_win = ../res/win

rc_ide_inc_dirs_os2 = -I"$(rc_path_os2)"
rc_ide_inc_dirs_nt  = -I"$(rc_path_nt)"
rc_ide_inc_dirs_win = -I"$(rc_path_win)"

.c : $(c_path_$(host_os));$(watcom_dir)/c
.cpp : ../cpp
.rc : $(rc_path_$(host_os))

!ifeq host_os win
extra_c_flags_link  = -DSERVER
!ifdef __WATCOM_TOOLS__
extra_c_flags_link  += -3
!endif
!endif

!ifdef __WATCOM_TOOLS__
extra_cxx_flags_i86 = -zc -zm
!endif

extra_l_flags       = op eliminate sort global

doc_inc_dirs_nt     = -I"$(doc_path_nt)"
doc_inc_dirs_os2    = -I"$(doc_path_os2)"
doc_inc_dirs_win    = -I"$(doc_path_win)"

inc_dirs_win = -I"$(batch_dir)/dos"

inc_dirs = -I"../h" $(wclass_inc_dirs) $(idelib_inc_dirs) $(gui_inc_dirs) $(doc_inc_dirs_$(host_os))
inc_dirs += -I"$(editdll_dir)" -I"$(rcsdll_dir)" -I"$(batch_dir)/h"

rc_inc_dirs = $(rc_ide_inc_dirs_$(host_os)) -I"../res" $(gui_inc_dirs)

libs = $(idelib_lib) $(wclass_lib) $(gui_lib) $(wres_lib)

# systems where version resource must be added to .EXE
version_res_exe_nt_386 = exever.res
version_res_exe_nt_x64 = exever.res

!include verrc.mif

all: $(ide_h_$(host_os)) $(proj_name).exe

$(proj_name).exe : $(objs) $(libs) $(proj_name).res $(version_res_exe_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
!ifndef __WATCOM_TOOLS__
    @%make echo_link
    $(cl) $(clflags) $(objs) $(libs) $(ldflags)
!else
    $(noecho)%create $^&.lnk
    @%append $^&.lnk $(lflags)
    @%append $^&.lnk op de $(description)
    @%append $^&.lnk f {$(objs)}
    @%append $^&.lnk lib {$(libs)}   
    @%make echo_link
    $(linker) name $^& @$^&.lnk
!endif
    @%make bind_res_add_version_exe

$(proj_name).res : ide.rc $(gui_dir)/h/gui.rc
    @%make echo_rc
    $(rc) $(rc_flags) $(rc_inc_path) $[@ -fo=$^@

!ifdef ide_h_$(host_os)
$(ide_h_$(host_os)): .ALWAYS
curr_dir=$+$(%__CWD__)$-
    @cd $(doc_path_$(host_os):$(to_os_path))
    @wmake -h hbook=ide header=1
    @cd $(curr_dir)
!endif
