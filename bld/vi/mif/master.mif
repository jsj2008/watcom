proj_name = vi

name = vix

!ifndef vi_autodepends
vi_autodepends = .AUTODEPEND
!endif

vi_trmem = 1

.EXTENSIONS: .gch .gdh
.EXTENSIONS: .ch .dh
.EXTENSIONS: .vi .dat

additional_cleanup = *.rex *.gdh *.gch $(bind_compiled)

!include cproj.mif
!include defrule.mif
!include deftarg.mif
!include win386.mif

!include ../mif/rcsdll.mif
!include ../mif/include.mif
!include ../mif/objects.mif
!include ../mif/compile.mif
!include ../mif/special.mif
!include ../mif/link.mif
!include ../mif/bind.mif

!include $(commonui_dir)/client.mif
!include $(wpi_dir)/client.mif
!include $(ui_dir)/client.mif
!include trmem.mif

.h : $(vi_dir)/h
.dat : $(vi_dir)/dat

# systems where version resources must be added to .EXE
version_res_exe_nt_386 = exever.res
version_res_exe_nt_x64 = exever.res

!include verrc.mif

vi.exe: $(bind_files) $(name).exe $(__MAKEFILES__)
    @set edpath=../dat
    @%make edbind_data
    cp $(name).exe vi.exe
!ifdef __WATCOM_TOOLS__
    cp $(name).sym vi.sym
!endif

$(name).exe : $(special) $(objs) $(objsroot) $(objinit) $(libs) $(other) $(videps) $(mifdep) $(version_res_exe_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
!ifndef __WATCOM_TOOLS__
    @%make echo_link
    $(cl) $(clflags) $(objsroot) $(start_flags) $(objinit) $(more_flags) $(objs) $(libs) $(final_flags) $(rcsdll) $(ldflags)
!else
    $(noecho)%create $^&.lnk
    @for %o in ($(objsroot)) do @%append $^&.lnk file %o
    @%append $^&.lnk $(start_flags)
    @for %o in ($(objinit)) do @%append $^&.lnk file %o
    @%append $^&.lnk $(more_flags)
    @for %o in ($(objs)) do @%append $^&.lnk file %o
    @%append $^&.lnk $(final_flags)
    @for %l in ($(libs)) do @%append $^&.lnk lib %l
    @%make echo_link
    $(linker) name $(lname) $(lflags) @$^&.lnk
!endif
!ifeq sys_windowed 1
!ifdef win386
    @%make bind_win386_add_res
!else
    @%make bind_res_add_version_exe
!endif
!else
    @%make bind_res_version_exe
!endif

$(bind_compiled) : $(bind_compiled:./=../dat/) $(__MAKEFILES__)
    vicomp ../dat/$^. $^.

setfs.obj : setfs.c setfs.gch setfs.gdh
setgen.obj : setgen.c setgen.gch setgen.gdh
setscr.obj : setscr.c setscr.gch

setfs.gch : ../win/ctl/setfs.ch
setscr.gch : ../win/ctl/setscr.ch
setgen.gch : ../win/ctl/setgen.ch

setfs.gch setscr.gch setgen.gch : $(__MAKEFILES__)
    parsectl $[@ $@ Ctl_$^&

setfs.gdh : ../win/ctl/setfs.dh
setgen.gdh : ../win/ctl/setgen.dh

setfs.gdh setgen.gdh: $(__MAKEFILES__)
    parsedyn $[@ $@ Dyn_$^&

$(name).res : $(vi_dir)/res/viw.rc $(__MAKEFILES__) $(vi_autodepends)
    @%make echo_rc
    $(rc) $(rc_flags) -ad -zk0 $(rc_inc_path) $[@ -fo=$^@

rcstr.gh : rcstrmsg.gh $(__MAKEFILES__)
    @%make echo_awk
    $(awk) -f $(build_dir)/msgtoh.awk -v OUTFILE=$^. $[@

rcstrmsg.gh : $(vi_dir)/res/vi.msg $(vi_dir)/res/tooltips.msg ../h/langdef.h $(msgfiles) $(__MAKEFILES__)
    @%make echo_cpp
    $(cpp) $(rc_aui_flags) -o$^@ $[@

!ifeq host_os win
!ifeq host_cpu i86
tags : ../win/tags .SYMBOLIC

../win/tags: vi.tag $(__MAKEFILES__)
    ctags @vi.tag -f$^@
!endif
!endif

edbind_data : .PROCEDURE .EXPLICIT
    $(noecho)%create edbind.tmp
    @for %i in ($(bind_files:./=)) do @%append edbind.tmp %i
!ifeq verbose 0
    @echo edbind edbind.tmp $(name).exe
!endif
    $(edbind) -dedbind.tmp -q $(name).exe
