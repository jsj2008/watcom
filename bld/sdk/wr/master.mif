proj_name = wr
name = wr

!ifndef wr_autodepends
wr_autodepends = .AUTODEPEND
!endif

memory_model_i86 = l

sys_windowed = 1
sys_dll = 1
#suppress_bd = 1

wr_trmem = 1

win_yacc_prefix = winy
win_yacc_file   = $(win_yacc_prefix)tab

!include cproj.mif
!include defrule.mif
!include deftarg.mif

.EXTENSIONS: .msg .res .rc

!include $(commonui_dir)/client.mif
!include $(cpp_dir)/client.mif

WINDOWS = 1
!include wres.mif

!include trmem.mif

cpp_objs = preproc.obj ppexpr.obj ppmacro.obj ppenv.obj pathlist.obj

rc_objs = &
    pass2.obj exeseg.obj exeresw.obj rcstr.obj ppalloc.obj &
    exeutil.obj exeobj.obj exerespe.obj rcio.obj semutil.obj &
    global.obj semstrw.obj semsnglw.obj semantic.obj semantcw.obj semraw.obj &
    rcerrors.obj tmpctl.obj autodep.obj &
    dbtable.obj sharedio.obj mergedir.obj rcspawn.obj

objs = wrmain.obj wrmem.obj wrmsg.obj wrfindt.obj wrtmpfil.obj &
    wrrdw16.obj wrrdwnt.obj wrrdres.obj wrimg.obj &
    wrsvexe.obj wrsvres.obj &
    wridfile.obj wrinfo.obj wrstrdup.obj &
    wrlist.obj wrdel.obj wrstr.obj wrclean.obj &
    wrdata.obj wrnamoor.obj wrwresid.obj &
    wrselft.obj wrmemf.obj wrdmsg.obj wrctl3d.obj &
    wrbitmap.obj wricon.obj wr_wres.obj wrselimg.obj &
    wrrnames.obj wrhash.obj wredit.obj wrutil.obj $(trmem_objs) &
    wrstubs.obj rcerrprt.obj rcgetenv.obj $(cpp_objs) $(rc_objs)

msgfiles = $(wrc_dir)/h/rc.msg ../res/wr.msg

extra_cpp_flags   = -DWIN_GUI -DWRDLL

extra_c_flags     = -s

extra_c_flags_win = -zu-zw-zc

# wr objects
extra_c_flags_wrmem = $(trmem_cover_cflags)

extra_c_flags_trmem = $(trmem_cflags)

.c:   ../c;$(trmem_dir);$(cpp_c_dirs);$(wrc_dir)/c;$(watcom_dir)/c

inc_dirs = -I. -I"../h" $(cpp_inc_dirs) $(wres_inc_dirs) -I"$(wrc_dir)/h" $(commonui_inc_dirs)

rc_inc_dirs = #$(cpp_inc_dirs) $(wres_inc_dirs) -I"$(wrc_dir)/h" $(commonui_inc_dirs)

libs = $(wres_lib) $(commonui_lib)

#------------- LINK
extra_l_flags_dll = op implib $($(proj_name)_dllbase_$(host_os)_$(host_cpu))
extra_l_flags_dll_nt = op heap=16k commit heap=8k
extra_l_flags_dll_win = op rwr,stack=16k export WEP RESIDENT
#extra_l_flags_dll_win += segment  _TEXT PRELOAD FIXED
#extra_l_flags_dll_win += segment  CLASS 'CODE' LOADONCALL MOVEABLE DISCARDABLE
#extra_l_flags_dll_win += segment  CLASS 'CODE' PRELOAD

# systems where version resources must be added to .DLL
version_res_dll_nt_386 = version.res
version_res_dll_nt_x64 = version.res

!include verrc.mif

$(name).dll: $(win_yacc_file).h rcmsg.gh $(objs) $(libs) $(name).res $(version_res_dll_$(host_os)_$(host_cpu)) $(__MAKEFILES__)
    @%make echo_link
!ifndef __WATCOM_TOOLS__
    $(cl) $(clflags) $(objs) $(libs) $(ldflags)
!else
    $(linker) name $^@ $(lflags) file {$(objs)} lib {$(libs)}
!endif
    @%make bind_res_add_version_dll

#---------- TEST
test_system_win_i86= windows
test_system_nt_386 = nt_win
test_system_nt_axp = ntaxp_win
test_system = $(test_system_$(host_os)_$(host_cpu))

test_lflags = system $(test_system) name test debug all libpath $(watcom_dir)/lib
test_lflags += option quiet, map, elim, v, static

test.exe: $(name).lib $(TESTLNK) test.obj $(__MAKEFILES__)
    @%make echo_link
    $(linker) name $^@ $(test_lflags) file {test.obj} library {$(name).lib}

rcmsg.gh: wrmsg.gh $(__MAKEFILES__)
    @%make echo_awk
    $(awk) -f $(build_dir)/msgtoh.awk -v OUTFILE=$^. $[@

wrmsg.gh: ../res/master.msg $(msgfiles) $(__MAKEFILES__)
    @%make echo_cpp
    $(cpp) $(rc_aui_flags) -I"../res" -I"$(wrc_dir)/h" -o$^@ $[@

$(win_yacc_file).h : $(wrc_dir)/y/rcwin.y $(wrc_dir)/y/yydrivrw.c $(wrc_dir)/h/rcmem.h $(__MAKEFILES__)
    @%make echo_yacc
    $(yacc) -b $(win_yacc_prefix) -d -db -dd $[@ $(wrc_dir)/y/yydrivrw.c >$(nulldevice)
    @rm -f $(win_yacc_file).c # C code isn't used

$(name).res: ../res/wr.rc $(__MAKEFILES__) .AUTODEPEND
    @%make echo_rc
    $(rc) $(rc_flags) -ad $(rc_inc_path) $[@ -fo=$^@
