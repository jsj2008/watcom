proj_name = wfc

!ifndef wfc_autodepends
wfc_autodepends = .AUTODEPEND
!endif

additional_cleanup = *.gc

exename_i86 = wfc
exename_386 = wfc386
exename_axp = wfcaxp
exename_ppc = wfcppc
target_exe  = $(exename_$(target_cpu))

!include cproj.mif
!include defrule.mif
!include deftarg.mif
!include osi.mif

!include $(cg_dir)/mif/fe.mif
!include $(as_dir)/client.mif
!include $(wasm_dir)/client.mif

!include wres.mif

!include ../../files.mif

!ifeq release 0
wfc_trmem = 1
!endif

inc_dirs= -I. -I.. -I"../../h" -I"../../../h" $(cg_inc_dirs) $(dwarfw_inc_dirs) -I"$(comp_cfg_dir)/h" -I"$(fe_misc_dir)/h" $(asminline_inc_dirs) -I"$(clib_dir)/h" -I"$(lib_misc_dir)/h"

# define _USE_RESOURCES_ so that WASM error messages come from resources
extra_cpp_flags = -D_USE_RESOURCES_
!ifeq dll_cg 1
extra_cpp_flags += -D_CGDLL
!endif

.h: ..;../../h;../../../h
.c: ..;../../c;../../../c;$(asminline_c);$(trmem_dir);$(watcom_dir)/c

!ifeq host_cpu axp
extra_a_flags = -oc
.asm: ../../../asmaxp
!endif

!ifeq wfc_trmem 1
extra_c_flags_fmemmgr = -DTRMEM -I"$(trmem_dir)"
fobjs += trmem.obj trmemcvr.obj
!endif

extra_c_flags_trmem = -DTRMEM -of+
extra_c_flags_trmemcvr = -DTRMEM -of+

libs = $(asminline_lib) $(cg_libs) $(wres_lib)

# systems where version resources must be added to .EXE
version_res_exe_nt_386 = exever.res
version_res_exe_nt_x64 = exever.res

verrc_exe = $(target_exe)
!include verrc.mif

$(target_exe).exe : $(asminline_deps) errgrp.gc errcod.gh $(fobjs) wresui.res $(libs) $(version_res_exe_$(host_os)_$(host_cpu)) $(osildr) $(__MAKEFILES__)
!ifndef __WATCOM_TOOLS__
    @%make echo_link
    $(cl) $(clflags) $(fobjs) $(libs) $(ldflags)
!else
    $(noecho)%create $^&.lnk
    @for %i in ($(fobjs)) do @%append $^&.lnk file %i
    @for %i in ($(libs)) do @%append $^&.lnk lib %i
    @%make echo_link
    $(linker) name $(lname) $(lflags) @$^&.lnk
    @%make bind_osildr
!endif
    @%make bind_res_version_exe
    @%make bind_res_wresui

option.obj : option.c optinfo.h

./mkopcod1.exe: $(wasm_dir)/mkopcod1.c $(wasm_dir)/mkopcode.h
    @%make echo_bldcl
    $(bld_cl) $[@ -I. -I"$(wasm_dir)/h" $(bld_clflags) $(bld_ldflags)

asmops.gh: ./mkopcod1.exe $(wasm_dir)/inlnops.tok
    @%make echo_execute
    $(noecho)$[@ $(wasm_dir)/inlnops.tok $@

./mkopcode.exe: $(wasm_dir)/mkopcode.c $(wasm_dir)/mkopcode.h asmops.gh
    @%make echo_bldcl
    $(bld_cl) $[@ -I. -I"$(wasm_dir)/h" $(bld_clflags) $(bld_ldflags)

asmopsd.gh: ./mkopcode.exe $(wasm_dir)/inlnops.tok
    @%make echo_execute
    $(noecho)$[@ $(wasm_dir)/inlnops.tok $@

msg.gh : $(wasm_dir)/h/asmshare.msg
    @%make echo_awk
    $(awk) -v base=MSG_RC_BASE -f $(build_dir)/makemsg.awk -v OUTFILE=$^. $[@

errsrc_opt_i86 = eoic
errsrc_opt_386 = eo3c
errsrc_opt_axp = eorc

jerrsrc_opt_i86 = joic
jerrsrc_opt_386 = jo3c
jerrsrc_opt_axp = jorc

errmsg.grc errgrp.gc errcod.gh: ../../../h/error.msg
    $(noecho)errsrc $[@ $(errsrc_opt_$(target_cpu)) >$(nulldevice)

jerrmsg.grc:  ../../../h/error.msg
    $(noecho)errsrc $[@ $(jerrsrc_opt_$(target_cpu)) >$(nulldevice)

wresui.res : ../../c/errmsg.rc errmsg.grc jerrmsg.grc ../../../h/errcod.h errcod.gh
    @%make echo_rc
    $(rc_aui) -I. -I.. -I"../../h" -I"../../../h" $(asminline_inc_dirs) -I"$(comp_cfg_dir)/h" -I"$(fe_misc_dir)/h" $[@ -fo=$^@
