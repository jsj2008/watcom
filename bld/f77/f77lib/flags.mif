#######################
# C PREPROCESSOR SETINGS
######
# Include system headers in dependency lists
f77lib_cpp_flags = -D__RT__ -D_ENABLE_AUTODEPEND
!ifeq linkage dynamic
f77lib_cpp_flags += -D__DLL__
!endif
!ifdef share
f77lib_cpp_flags += -D__SHARE__ -DIN_SLIB -D_NO_SLIB
!endif

f77lib_cpp_msdos       = -D__WATCOM_LFN__
f77lib_cpp_windows     = -DSTRICT
f77lib_cpp_windows_386 = -D__CALL21__
f77lib_cpp_winnt       = $(win32ver)
f77lib_cpp_winnt_axp   = -DWIN32 -D_WIN32
f77lib_cpp_winnt_ppc   = -DWIN32 -D_WIN32

f77lib_cpp_flags += $(f77lib_cpp_$(system)) $(f77lib_cpp_$(system)_$(processor))

##########################
# C COMPILER SETINGS
######
sw_c_common = -za99-we-w8-zl-x-xx-zam-j-wpx
#sw_c_common = -za99-wx-w8 -wce=307 -wce=308 -wce=309 -zl-x-xx-zam
!ifdef __UNIX__
sw_c_common += -fo=.obj
!endif
!ifdef dll16
sw_c_common += -bm-bd
!endif
!ifdef mthreaded
sw_c_common += -bm
!endif
!ifdef debug
sw_c_common += -en
!endif

# sw_c_(processor)_(model)
sw_c_bigcode  =
sw_c_bigdata  = -zu

sw_c_086_ms = -ms
sw_c_086_mm = -mm$(sw_c_bigcode)
sw_c_086_mc = -mc$(sw_c_bigdata)
sw_c_086_ml = -ml$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_086_mh = -mh$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_286_ms = -ms
sw_c_286_mm = -mm$(sw_c_bigcode)
sw_c_286_mc = -mc$(sw_c_bigdata)
sw_c_286_ml = -ml$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_286_mh = -mh$(sw_c_bigdata)$(sw_c_bigcode)
sw_c_386_ms = -ms
sw_c_386_mf = -mf
sw_c_axp_   =
sw_c_ppc_   =

# sw_c_(processor)
sw_c_intel    = -of # overlay
sw_c_register = -5r
sw_c_stack    = -5s

sw_c_086 = $(sw_c_intel)-0-fpc
sw_c_087 = $(sw_c_intel)-0-fpi
sw_c_286 = $(sw_c_intel)-2-fpc
sw_c_287 = $(sw_c_intel)-2-fpi
sw_c_386 = $(sw_c_intel)$(sw_a_$(convention))-fpc-zc
sw_c_387 = $(sw_c_intel)$(sw_a_$(convention))-fpi-zc
sw_c_axp =
sw_c_ppc =

# sw_c_(system)_(processor)
sw_c_msdos_086    = -oax
sw_c_msdos_286    = -oax
sw_c_msdos_386    = -oaxt
sw_c_netware_386  = -oaxt
sw_c_os2_286      = -oax
sw_c_os2_386      = -oaxt-bm
sw_c_os2_ppc      = -oaxt-bm
sw_c_qnx_286      = -oax
sw_c_qnx_386      = -oaxt-bm
sw_c_windows_086  = -oax
sw_c_windows_386  = -oaxt
sw_c_winnt_386    = -oaxt
sw_c_winnt_axp    = -oaxt
sw_c_winnt_ppc    = -oaxt
sw_c_linux_386    = -oaxt

# sw_c_(system)
sw_c_msdos      = -bt=dos
sw_c_netware    = -bt=netware -bm -D_NETWARE_CLIB
sw_c_os2        = -bt=os2
sw_c_qnx        = -bt=qnx
sw_c_windows    = -bt=windows
sw_c_winnt      = -bt=nt -bm
sw_c_linux      = -bt=linux -bm

#####################
# ASSEMBLERS SETINGS
######
sw_a_common = -we
!ifdef __UNIX__
sw_a_common += -fo=.obj
!endif
!ifdef dll16
sw_a_common += -d__MT__
!endif
!ifdef mthreaded
sw_a_common += -d__MT__
!endif
!ifeq linkage dynamic
sw_a_common += -d__DLL__
!endif

# sw_a_(processor)_(model)
sw_a_086_ms = -ms
sw_a_086_mm = -mm
sw_a_086_mc = -mc
sw_a_086_ml = -ml
sw_a_086_mh = -mh
sw_a_286_ms = -ms
sw_a_286_mm = -mm
sw_a_286_mc = -mc
sw_a_286_ml = -ml
sw_a_286_mh = -mh
sw_a_386_ms = -ms
sw_a_386_mf = -mf
sw_a_386_   =
sw_a_axp_   =
sw_a_ppc_   =

# sw_a_(processor)
sw_a_intel    = -w8-e
sw_a_register = -5r
sw_a_stack    = -5s

sw_a_086 = $(sw_a_intel)-0-fpc
sw_a_087 = $(sw_a_intel)-0-fpi
sw_a_286 = $(sw_a_intel)-2-fpc
sw_a_287 = $(sw_a_intel)-2-fpi
sw_a_386 = $(sw_a_intel)$(sw_a_$(convention))-fpc
sw_a_387 = $(sw_a_intel)$(sw_a_$(convention))-fpi
sw_a_axp =
sw_a_ppc =

# sw_a_(system)_(processor)
sw_a_msdos_086    =
sw_a_msdos_286    =
sw_a_msdos_386    =
sw_a_netware_386  =
sw_a_os2_286      =
sw_a_os2_386      = -d__MT__
sw_a_os2_ppc      = -d__MT__
sw_a_qnx_286      =
sw_a_qnx_386      = -d__MT__
sw_a_windows_086  =
sw_a_windows_386  =
sw_a_winnt_386    =
sw_a_winnt_axp    = -dWIN32 -d_WIN32
sw_a_winnt_ppc    = -oc -dWIN32 -d_WIN32
sw_a_linux_386    =

# sw_a_(system)
sw_a_msdos      = -bt=dos -D__WATCOM_LFN__
sw_a_netware    = -bt=netware -d__MT__
sw_a_os2        = -bt=os2
sw_a_qnx        = -bt=qnx
sw_a_windows    = -bt=windows
sw_a_winnt      = -bt=nt $(win32ver) -d__MT__
sw_a_linux      = -bt=linux -d__MT__

#make bug
!ifndef extra_flib_c_flags
extra_flib_c_flags =
!endif
!ifndef extra_flib_a_flags
extra_flib_a_flags =
!endif

flib_c_flags =$(sw_c_common) $(sw_c_$(flib_$(processor))_$(model)) $(sw_c_$(processor)) &
    $(sw_c_$(system)_$(flib_$(processor))) $(sw_c_$(system)) $(f77lib_cpp_flags) $(extra_flib_c_flags)
flib_a_flags =$(sw_a_common) $(sw_a_$(linkage)) $(sw_a_$(flib_$(processor))_$(model)) &
    $(sw_a_$(processor)) $(sw_a_$(system)_$(flib_$(processor))) $(sw_a_$(system)) $(extra_flib_a_flags)

# debug flags need to be last to override optimization flags
!ifeq release 0
c_dbg_flags = -d2
a_dbg_flags = -d1
!else
c_dbg_flags = -DNDEBUG
a_dbg_flags = -dNDEBUG
!endif

# libname_(model)
flib_suffix_ms  = s
flib_suffix_mm  = m
flib_suffix_mc  = c
flib_suffix_ml  = l
flib_suffix_mh  = h
flib_suffix_register =
flib_suffix_stack    = s
libname_086 = $(flib_suffix_$(model))
libname_087 = 7$(flib_suffix_$(model))
libname_286 = $(flib_suffix_$(model))
libname_287 = 7$(flib_suffix_$(model))
libname_386 = $(flib_suffix_$(convention))
libname_387 = 7$(flib_suffix_$(convention))
libname = flib$(libname_$(processor))

!ifeq release 0
flib_lib_flags = -b-c-n-pa
!else
flib_lib_flags = -b-c-n-pa-s-t-zld
!endif

!include ../../include.mif
